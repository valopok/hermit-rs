name: Publish container image

on:
  push:
    branches:
      - main

env:
  GH_TOKEN: ${{ github.token }}
  CARGO_TERM_COLOR: always

jobs:
  publish_image:
    name: Publish container image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
      with:
        submodules: true
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: hermit-os
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build demo
      run: cargo build -Zbuild-std=std,panic_abort --target x86_64-unknown-hermit -p rusty_demo --release
    - name: Copy demo out of target dir
      run: cp target/x86_64-unknown-hermit/release/rusty_demo .
    - name: Download loader
      run: |
        gh release download --repo hermit-os/loader --pattern hermit-loader-x86_64
        gh release download --repo hermit-os/loader --pattern hermit-loader-x86_64-fc
    - name: Create dockerfile for rusty_demo
      run: |
        cat << END > Dockerfile
        FROM ghcr.io/hermit-os/hermit_env:latest
        COPY hermit-loader-x86_64 hermit/hermit-loader
        COPY hermit-loader-x86_64-fc hermit/hermit-loader-fc
        COPY rusty_demo hermit/rusty_demo
        CMD ["/hermit/rusty_demo"]
        END
    - name: Build and push container
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ghcr.io/hermit-os/rusty_demo:latest
    - name: Build httpd
      run: cargo build -Zbuild-std=std,panic_abort --target x86_64-unknown-hermit -p httpd --features hermit/dhcpv4 --release
    - name: Copy httpd out of target dir
      run: cp target/x86_64-unknown-hermit/release/httpd .
    - name: Create dockerfile for httpd
      run: |
        cat << END > Dockerfile
        FROM ghcr.io/hermit-os/hermit_env:latest
        COPY hermit-loader-x86_64 hermit/hermit-loader
        COPY hermit-loader-x86_64-fc hermit/hermit-loader-fc
        COPY httpd hermit/httpd
        CMD ["/hermit/httpd"]
        END
    - name: Build and push container
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ghcr.io/hermit-os/httpd:latest
    - name: Create dockerfile for httpd (alpine)
      run: |
        cat << END > Dockerfile
        FROM ghcr.io/hermit-os/hermit_env_alpine:latest
        COPY hermit-loader-x86_64 hermit/hermit-loader
        COPY hermit-loader-x86_64-fc hermit/hermit-loader-fc
        COPY httpd hermit/httpd
        CMD ["/hermit/httpd"]
        END
    - name: Build and push container
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ghcr.io/hermit-os/httpd_alpine:latest
    - name: Build webserver
      run: cargo build -Zbuild-std=std,panic_abort --target x86_64-unknown-hermit -p webserver --features hermit/dhcpv4,hermit/fs --release
    - name: Copy webserver out of target dir
      run: cp target/x86_64-unknown-hermit/release/webserver .
    - name: Create static website
      run: |
        mkdir -p root
        cat << END > root/index.html
        <!DOCTYPE html>
        <html>
        <head>
        <title>Hermit-OS</title>
        </head>
        <body>
        <p>Hello from Hermit-OS! ðŸ¦€</p>
        </body>
        </html>
        END
    - name: Create dockerfile for webserver
      run: |
        cat << END > Dockerfile
        FROM ghcr.io/hermit-os/hermit_env:latest
        COPY root root
        COPY hermit-loader-x86_64 hermit/hermit-loader
        COPY hermit-loader-x86_64-fc hermit/hermit-loader-fc
        COPY webserver hermit/webserver
        CMD ["/hermit/webserver"]
        END
    - name: Build and push container
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ghcr.io/hermit-os/webserver:latest
    - name: Build tls-demo
      run: cargo build -Zbuild-std=std,panic_abort --target x86_64-unknown-hermit -p tls --features hermit/dhcpv4 --release
    - name: Copy tls-demo out of target dir
      run: cp target/x86_64-unknown-hermit/release/tls .
    - name: Create dockerfile for tls-demo
      run: |
        cat << END > Dockerfile
        FROM ghcr.io/hermit-os/hermit_env:latest
        COPY hermit-loader-x86_64 hermit/hermit-loader
        COPY hermit-loader-x86_64-fc hermit/hermit-loader-fc
        COPY tls hermit/tls
        CMD ["/hermit/tls"]
        END
    - name: Build and push container
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ghcr.io/hermit-os/tls:latest
    - name: Build axum
      run: cargo build -Zbuild-std=std,panic_abort --target x86_64-unknown-hermit -p axum-example --features hermit/dhcpv4,hermit/fs --release
    - name: Copy axum out of target dir
      run: cp target/x86_64-unknown-hermit/release/axum-example .
    - name: Create dockerfile for axum
      run: |
        cat << END > Dockerfile
        FROM ghcr.io/hermit-os/hermit_env:latest
        COPY hermit-loader-x86_64 hermit/hermit-loader
        COPY hermit-loader-x86_64-fc hermit/hermit-loader-fc
        COPY axum-example hermit/axum-example
        CMD ["/hermit/axum-example"]
        END
    - name: Build and push container
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: ghcr.io/hermit-os/axum-example:latest
